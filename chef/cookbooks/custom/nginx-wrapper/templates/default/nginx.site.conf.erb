server {

  listen <%= @site['port'] || 80 %>;

  server_name <%= @site['server_name'] %>;

<% if @site['root'] %>
  root <%= @site['root'] %>;
<% else %>
  root /var/www/<%= @site['server_name'] %>/docroot;
<% end %>

  index <%= @site['index'] || 'index.php' %>;

  error_log <%= node['nginx']['log_dir'] %>/<%= @site['server_name'] %>.error.log;
  access_log <%= node['nginx']['log_dir'] %>/<%= @site['server_name'] %>.access.log;

  ## The 'default' location.
  location / {
    try_files $uri @rewrite;
  }

  ## If accessing an image generated by imagecache, serve it directly if
  ## available, if not relay the request to Drupal to (re)generate the
  ## image.
  location ~* /imagecache/ {
    access_log off;
    expires 30d;
    try_files $uri @rewrite;
  }

  ## Drupal 7 generated image handling, i.e., imagecache in core. See:
  ## https://drupal.org/node/371374.
  location ~* /files/styles/ {
    access_log off;
    expires 30d;
    try_files $uri @rewrite;
  }

  ## Regular private file serving (i.e. handled by Drupal).
  location ^~ /system/files/ {
    ## For not signaling a 404 in the error log whenever the
    ## system/files directory is accessed add the line below.
    ## Note that the 404 is the intended behavior.
    log_not_found off;
    access_log off;
    expires 30d;
    try_files $uri @rewrite;
  }

  ## All static files will be served directly.
  location ~* ^.+\.(?:txt|css|js|jpe?g|gif|htc|ico|png|html|xml)$ {
    access_log off;
    log_not_found off;
    expires 30d;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
    ## Set the OS file cache.
    open_file_cache max=3000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
  }

  ## PDFs and powerpoint files handling.
  location ~* ^.+\.(?:pdf|pptx?)$ {
    expires 30d;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
  }

  ## Disable access to any code files. Return a 404 to curtail information disclosure. Hide also the text files.
  location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
    return 404;
  }

  location ~ '\.php$|^/update.php' {
    fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
    #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
    include fastcgi.conf;
    fastcgi_param SCRIPT_FILENAME $request_filename;
    fastcgi_intercept_errors on;
    fastcgi_pass unix:/var/run/php5-fpm.sock;
  }

  ########### Security measures ##########

  location @rewrite {
    # Some modules enforce no slash (/) at the end of the URL
    # Else this rewrite block wouldn't be needed (GlobalRedirect)
    rewrite ^/(.*)$ /<%= @site['index'] || 'index.php' %>?q=$1;
  }

  ## Disallow access to .git directory: return 404 as not to disclose
  ## information.
  location ~ /.git {
    return 404;
  }

  ## Disallow access to patches directory.
  location ~ /patches {
    return 404;
  }

  ## Disallow access to drush backup directory.
  location = /backup {
    return 404;
  }

  ## Disable access logs for robots.txt.
  location = /robots.txt {
    access_log off;
  }

  ## RSS feed support.
  location = /rss.xml {
    try_files $uri @rewrite;
  }

  ## XML Sitemap support.
  location = /sitemap.xml {
    try_files $uri @rewrite;
  }

  ## Support for favicon. Return a 204 (No Content) if the favicon
  ## doesn't exist.
  location = /favicon.ico {
    try_files /favicon.ico =204;
  }

  ## Any other attempt to access PHP files returns a 404.
  location ~* ^.+\.php$ {
    return 404;
  }

}
